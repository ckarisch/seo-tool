@import "@/app/variables";

.domainStatusContent {
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;
  
  @media (min-width: 768px) {
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    gap: 24px;
  }
}

.contentEntry {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;

  @media (min-width: 768px) {
    gap: 24px;
  }

  &.dummyText {
    .metrics {
      opacity: 0.7;
    }
  }
}

.metrics {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
  width: 100%;

  @media (min-width: 480px) {
    grid-template-columns: repeat(3, 1fr);
    gap: 16px;
  }

  @media (min-width: 768px) {
    gap: 24px;
  }
}

.metric {
  display: flex;
  flex-direction: column;
  gap: 8px;
  align-items: center;
  text-align: center;
  padding: 12px 8px;
  background-color: white;
  border-radius: 12px;
  border: 1px solid $background-light;
  transition: all 0.2s ease;

  @media (min-width: 480px) {
    padding: 16px 12px;
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }

  .metricValue {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    border-radius: 12px;
    font-weight: 600;
    font-size: 1.1rem;
    transition: all 0.2s ease;
    
    @media (min-width: 480px) {
      width: 56px;
      height: 56px;
      font-size: 1.25rem;
    }
    
    &.dummyText {
      background-color: $background-light;
      animation: pulse 2s infinite ease-in-out;
      color: transparent;
    }
    
    &.veryGood {
      background-color: rgba($veryGood, 0.1);
      color: $veryGood;
    }
    
    &.good {
      background-color: rgba($good, 0.1);
      color: $good;
    }
    
    &.bad {
      background-color: rgba($error, 0.1);
      color: $error;
    }
  }

  .metricLabel {
    font-size: 0.8rem;
    font-weight: 500;
    color: $text-secondary;
    
    @media (min-width: 480px) {
      font-size: 0.9rem;
    }
  }
}

.verificationSection {
  background-color: white;
  border-radius: 12px;
  padding: 16px;
  border: 1px solid $background-light;
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;

  @media (min-width: 480px) {
    padding: 20px;
  }

  .verificationLabel {
    font-size: 0.85rem;
    font-weight: 500;
    color: $text-secondary;

    @media (min-width: 480px) {
      font-size: 0.9rem;
    }
  }

  .codeContainer {
    position: relative;
    
    .verificationCode {
      font-family: var(--font-mono);
      font-size: 0.85rem;
      padding: 10px 12px;
      background-color: $background-light;
      border-radius: 8px;
      color: $color;
      cursor: pointer;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 8px;
      user-select: all;
      word-break: break-all;

      @media (min-width: 480px) {
        font-size: 0.9rem;
        padding: 12px 16px;
        gap: 12px;
      }

      &:hover {
        background-color: darken($background-light, 2%);
        border-color: rgba(0, 0, 0, 0.1);

        .copyIcon {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .copyIcon {
        color: $text-secondary;
        opacity: 0;
        transform: translateY(2px);
        transition: all 0.2s ease;
        flex-shrink: 0;
      }
    }

    .tooltip {
      position: absolute;
      top: -36px;
      left: 50%;
      transform: translateX(-50%);
      background-color: $color;
      color: white;
      padding: 6px 12px;
      border-radius: 6px;
      font-size: 0.85rem;
      font-weight: 500;
      pointer-events: none;
      opacity: 0;
      transition: all 0.2s ease;
      white-space: nowrap;
      z-index: 10;

      &.show {
        opacity: 1;
        transform: translateX(-50%) translateY(-2px);
      }

      &:after {
        content: '';
        position: absolute;
        bottom: -4px;
        left: 50%;
        transform: translateX(-50%) rotate(45deg);
        width: 8px;
        height: 8px;
        background-color: $color;
      }
    }
  }
}

.verifyButton {
  align-self: stretch;
  padding: 12px 20px;
  background-color: $color;
  color: white;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;

  @media (min-width: 480px) {
    align-self: flex-start;
  }

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

.verificationStatus {
  padding: 12px;
  border-radius: 8px;
  font-size: 0.85rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: $background-light;
  color: $text-secondary;

  @media (min-width: 480px) {
    font-size: 0.9rem;
  }

  &.error {
    background-color: rgba($error, 0.1);
    color: $error;
  }

  &.success {
    background-color: rgba($veryGood, 0.1);
    color: $veryGood;
  }

  .spinner {
    animation: spin 1s linear infinite;
    flex-shrink: 0;
  }
}

.notifications {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  border-radius: 50%;
  background-color: $background-light;
  color: $warning;
  transition: all 0.2s ease;
  align-self: flex-end;

  &:hover {
    transform: scale(1.1);
  }

  &.dummyText {
    opacity: 0.7;
    animation: pulse 2s infinite ease-in-out;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.4;
  }
  100% {
    opacity: 0.7;
  }
}