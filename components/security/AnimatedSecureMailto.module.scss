// components/common/AnimatedSecureMailto.module.scss
@import "@/app/variables";

.container {
  display: inline-block;
  position: relative;
}

.button {
  color: $main;
  text-decoration: none;
  position: relative;
  transition: all 0.2s ease;
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 12px;
  margin: -8px -12px;
  border-radius: $border-radius;
  cursor: pointer;
  user-select: none;
  border: none;
  background: transparent;
  font-size: inherit;
  font-family: inherit;
  min-height: 44px; // Ensures touch target size
  
  // Ensure sufficient color contrast
  &:not(:disabled) {
    color: darken($main, 10%);
  }

  // Focus styles
  &:focus {
    outline: none;
  }

  &:focus-visible {
    outline: 2px solid darken($main, 20%);
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba($main, 0.2);
  }

  // High contrast mode support
  @media (forced-colors: active) {
    border: 1px solid ButtonText;
    
    &:focus-visible {
      outline: 2px solid Highlight;
      outline-offset: 2px;
    }
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  svg {
    flex-shrink: 0;
    transition: transform 0.2s ease;
    fill: currentColor;
    width: 16px;
    height: 16px;
    pointer-events: none;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &:hover:not(:disabled) {
    background-color: rgba($main, 0.1);
    
    svg {
      transform: translateX(2px);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    transition: none;
    
    &:hover:not(:disabled) svg {
      transform: none;
    }
  }
}

// Text styles
.text {
  position: relative;
  display: inline-block;
  
  @media (prefers-reduced-motion: reduce) {
    animation: none !important;
    transition: none !important;
  }
}

// Error message
.errorMessage {
  color: $error;
  font-size: 0.9em;
  margin-left: 8px;
  font-weight: 500;

  @media (forced-colors: active) {
    color: Mark;
  }
}

// Screen reader only content
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Animation variants
.underline {
  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
    opacity: 0.5;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &:hover:not(:disabled):after {
    transform: scaleX(1);
    transform-origin: left;
  }
}

.highlight {
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba($main, 0);
    transition: background-color 0.2s ease;
    border-radius: $border-radius;
    z-index: -1;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &:hover:not(:disabled):before {
    background-color: rgba($main, 0.1);
  }

  @media (forced-colors: active) {
    &:hover:not(:disabled):before {
      background-color: Highlight;
      opacity: 0.1;
    }
  }
}

.slide {
  padding-right: 32px;
  position: relative;

  &:after {
    content: 'â†’';
    position: absolute;
    right: 12px;
    opacity: 0;
    transform: translateX(-8px);
    transition: all 0.2s ease;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &:hover:not(:disabled):after {
    opacity: 1;
    transform: translateX(0);
  }
}

.glow {
  transition: text-shadow 0.2s ease;

  &:hover:not(:disabled) {
    text-shadow: 0 0 8px rgba($main, 0.5);
  }

  @media (prefers-reduced-motion: reduce) {
    transition: none;
    
    &:hover:not(:disabled) {
      text-shadow: none;
    }
  }

  @media (forced-colors: active) {
    &:hover:not(:disabled) {
      text-shadow: none;
    }
  }
}

.brackets {
  .bracketContent {
    position: relative;
    padding: 0 4px;
    
    &:before,
    &:after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      width: 2px;
      background-color: currentColor;
      opacity: 0;
      transition: all 0.2s ease;

      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }

    &:before {
      left: 0;
      transform: translateX(4px);
    }

    &:after {
      right: 0;
      transform: translateX(-4px);
    }
  }

  &:hover:not(:disabled) .bracketContent {
    &:before,
    &:after {
      opacity: 0.5;
      transform: translateX(0);
    }
  }
}

// Error state styles
.error {
  color: $error;
  
  &:focus-visible {
    outline-color: $error;
    box-shadow: 0 0 0 4px rgba($error, 0.2);
  }

  svg {
    color: $error;
  }

  @media (forced-colors: active) {
    color: Mark;
    
    svg {
      color: currentColor;
    }
  }
}

// Loading state styles
.loading {
  position: relative;
  pointer-events: none;
  
  &:after {
    content: '';
    position: absolute;
    inset: 0;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: $border-radius;
  }

  .text {
    opacity: 0.7;
  }

  svg {
    animation: spin 1s linear infinite;
    
    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// Touch device optimizations
@media (hover: none) {
  .button {
    &:hover:not(:disabled) {
      background-color: transparent;
      
      svg {
        transform: none;
      }
    }
    
    &:active:not(:disabled) {
      background-color: rgba($main, 0.1);
    }
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .button {
    min-height: 48px; // Larger touch target for mobile
    padding: 12px 16px;
    margin: -12px -16px;
  }
}

// Print styles
@media print {
  .button {
    color: #000 !important;
    background: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
    
    &:after,
    &:before {
      display: none !important;
    }

    svg {
      display: none !important;
    }
  }

  .text {
    text-decoration: none !important;
  }
}